package ${package.Controller};


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;
import java.util.List;
import javax.annotation.Resource;

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};


#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

##    // ${table.entityPath} == user    ${entity} == User

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;


    // 新增或者更新
    @PostMapping
    public boolean save(@RequestBody ${entity} ${table.entityPath}){
        return  ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
    }

    // 删除
    @DeleteMapping("/{id}")
    public boolean delete(@PathVariable Integer id){
        return ${table.entityPath}Service.removeById(id);
    }
    // 批量删除
    @PostMapping("/del/batch")
    public boolean deleteBatch(@RequestBody List<Integer> ids){
        return ${table.entityPath}Service.removeByIds(ids);
    }

    // 查找全部
    @GetMapping
    public List<${entity}> findAll(){
        return ${table.entityPath}Service.list();
    }
    // 单个查询
    @GetMapping("/{id}")
    public ${entity} findOne(@PathVariable Integer id){
        return ${table.entityPath}Service.getById(id);
    }


    @GetMapping("/page")    // 接口路径
    // 分页查询  mybatis-plus方式
    public IPage<${entity}> findPage(@RequestParam Integer pageNum, @RequestParam Integer pageSize, @RequestParam(defaultValue = "") String username,
                                                @RequestParam(defaultValue = "") String email, @RequestParam(defaultValue = "") String address){
        IPage<${entity}> page = new Page<>(pageNum, pageSize);
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
        if (!"".equals(username)){
            queryWrapper.like("username", username);
        }
        if (!"".equals(email)){
            queryWrapper.like("email", email);
        }
        if (!"".equals(address)){
            queryWrapper.like("address", address);
        }
        queryWrapper.orderByDesc("id");
        return userService.page(page, queryWrapper);
    }




}

#end